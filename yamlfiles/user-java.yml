apiVersion: apps/v1
kind: Deployment
metadata:
  name: user-java-deployment
  labels:
    app: user-java
spec:
  replicas: 1
  selector:
    matchLabels:
      app: user-java
  template:
    metadata:
      labels:
        app: user-java
    spec:
      nodeSelector:
        "kubernetes.io/os": linux
      containers:
      - name: userjava
        image: craksdemo.azurecr.io/user-java:1.0
        resources:
          limits:
            memory: "512Mi"
            cpu: ".5"
        ports:
        - containerPort: 80
          name: http
        readinessProbe:
          httpGet:
            path: /api/user-java/healthcheck
            port: 80
          periodSeconds: 30
          timeoutSeconds: 30
        volumeMounts:
        - name: secrets-store01
          mountPath: /secrets
          readOnly: true
        env:
        - name: SQL_USER
          valueFrom:
            secretKeyRef:
              name: sqlconnection
              key: username
        - name: SQL_PASSWORD
          valueFrom:
            secretKeyRef:
              name: sqlconnection
              key: password
        - name: SQL_SERVER
          valueFrom:
            secretKeyRef:
              name: sqlconnection
              key: sqlserver
      volumes:
        - name: secrets-store01
          csi:
            driver: secrets-store.csi.k8s.io
            readOnly: true
            volumeAttributes:
              secretProviderClass: "azure-kv-aks-demo"
---
apiVersion: v1
kind: Service
metadata:
  name: userjava-service
spec:
  type: ClusterIP
  ports:
  - port: 80
  selector:
    app: user-java